0. pr -> ['program', 'i', 'block', '.']
1. block -> ['var_declaration_section', 'compound_statement']
2. block -> ['compound_statement']
3. var_declaration_section -> ['var', 'var_declaration_section*']
4. var_declaration_section* -> ['var_declaration']
5. var_declaration_section* -> ['var_declaration', ';', 'variable_declaration_section*']
6. var_declaration -> ['var_declaration*', ':', 'types']
7. var_declaration* -> ['i']
8. var_declaration* -> ['i', 'var_declaration*']
9. type -> ['Integer']
10. type -> ['Boolean']
11. compound_statement -> ['begin', 'compound_statement*', 'end']
12. compound_statement* -> ['statement']
13. compound_statement* -> ['statement', ';', 'compound_statement*']
14. statement -> ['simple_statement']
15. statement -> ['structured_statement']
16. simple_statement -> ['assigned_statement']
17. simple_statement -> ['read_statement']
18. simple_statement -> ['write_statement']
19. assigned_statement -> ['i', ':=', 'expression']
20. read_statement -> ['read', 'i']
21. write_statement -> ['write', 'i']
22. write_statement -> ['write', 'literal']
23. structured_statement -> ['if_statement']
24. structured_statement -> ['while_statement']
25. structured_statement -> ['compound_statement']
26. if_statement -> ['if', 'boolean_expression', 'then', 'statement']
27. if_statement -> ['if', 'boolean_expression', 'else', 'statement']
28. while_statement -> ['while', 'boolean_expression', 'do', 'statement']
29. expression -> ['arithmetic_expression']
30. expression -> ['boolean_expression']
31. arithmetic_expression -> ['arithmetic_expression', 'term']
32. arithmetic_expression -> ['arithmetic_expression', '+', 'term']
33. arithmetic_expression -> ['arithmetic_expression', '-', 'term']
34. term -> ['factor']
35. term -> ['term', '*', 'factor']
36. factor -> ['i']
37. factor -> ['integer_literal']
38. literal -> ['integer_literal']
39. literal -> ['boolean_literal']
40. integer_literal -> ['integer_literal*']
41. integer_literal* -> ['digit']
42. integer_literal* -> ['digit', 'integer_literal*']
43. boolean_literal -> ['true']
44. boolean_literal -> ['false']
45. boolean_expression -> ['boolean_literal']
46. boolean_expression -> ['boolean_literal']
47. boolean_expression -> ['arithmetic_expression', '>', 'arithmetic_expression']
48. boolean_expression -> ['arithmetic_expression', '>=', 'arithmetic_expression']
49. boolean_expression -> ['arithmetic_expression', '=', 'arithmetic_expression']
50. boolean_expression -> ['arithmetic_expression', '<=', 'arithmetic_expression']
51. boolean_expression -> ['arithmetic_expression', '<', 'arithmetic_expression']
