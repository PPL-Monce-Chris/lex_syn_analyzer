0. pr -> ['program', 'identifier', 'block', '.']
1. identifier -> ['identifier*']
2. identifier* -> ['letter']
3. identifier* -> ['letter', 'identifier**']
4. identifier** -> ['letter']
5. identifier** -> ['digit']
6. block -> ['var_declaration_section', 'compound_statement']
7. block -> ['compound_statement']
8. var_declaration_section -> ['var', 'var_declaration_section*']
9. var_declaration_section* -> ['var_declaration']
10. var_declaration_section* -> ['var_declaration', ';', 'variable_declaration_section*']
11. var_declaration -> ['var_declaration*', ':', 'types']
12. var_declaration* -> ['identifier']
13. var_declaration* -> ['identifier', 'var_declaration*']
14. type -> ['Integer']
15. type -> ['Boolean']
16. compound_statement -> ['begin', 'compound_statement*', 'end']
17. compound_statement* -> ['statement']
18. compound_statement* -> ['statement', ';', 'compound_statement*']
19. statement -> ['simple_statement']
20. statement -> ['structured_statement']
21. simple_statement -> ['assigned_statement']
22. simple_statement -> ['read_statement']
23. simple_statement -> ['write_statement']
24. assigned_statement -> ['identifier', ':=', 'expression']
25. read_statement -> ['read', 'identifiers']
26. write_statement -> ['write', 'identifier']
27. write_statement -> ['write', 'literal']
28. structured_statement -> ['if_statement']
29. structured_statement -> ['while_statement']
30. structured_statement -> ['compound_statement']
31. if_statement -> ['if', 'boolean_expression', 'then', 'statement']
32. if_statement -> ['if', 'boolean_expression', 'else', 'statement']
33. while_statement -> ['while', 'boolean_expression', 'do', 'statement']
34. expression -> ['arithmetic_expression']
35. expression -> ['boolean_expression']
36. arithmetic_expression -> ['arithmetic_expression', 'term']
37. arithmetic_expression -> ['arithmetic_expression', '+', 'term']
38. arithmetic_expression -> ['arithmetic_expression', '-', 'term']
39. term -> ['factor']
40. term -> ['term', '*', 'factor']
41. factor -> ['identifier']
42. factor -> ['integer_literal']
43. literal -> ['integer_literal']
44. literal -> ['boolean_literal']
45. integer_literal -> ['integer_literal*']
46. integer_literal* -> ['digit']
47. integer_literal* -> ['digit', 'integer_literal*']
48. boolean_literal -> ['true']
49. boolean_literal -> ['false']
50. boolean_expression -> ['boolean_literal']
51. boolean_expression -> ['boolean_literal']
52. boolean_expression -> ['arithmetic_expression', '>', 'arithmetic_expression']
53. boolean_expression -> ['arithmetic_expression', '>=', 'arithmetic_expression']
54. boolean_expression -> ['arithmetic_expression', '=', 'arithmetic_expression']
55. boolean_expression -> ['arithmetic_expression', '<=', 'arithmetic_expression']
56. boolean_expression -> ['arithmetic_expression', '<', 'arithmetic_expression']
